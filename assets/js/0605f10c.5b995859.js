"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[284],{1938:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var t=o(4848),s=o(8453);const c={title:"Advanced",description:"Exploring the less common problems encountered during component creation.",sidebar_position:4},r=void 0,i={id:"components/advanced",title:"Advanced",description:"Exploring the less common problems encountered during component creation.",source:"@site/docs/components/advanced.md",sourceDirName:"components",slug:"/components/advanced",permalink:"/docs/components/advanced",draft:!1,unlisted:!1,editUrl:"https://github.com/ocurity/docs/tree/main/packages/create-docusaurus/templates/shared/docs/components/advanced.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Advanced",description:"Exploring the less common problems encountered during component creation.",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Consumers",permalink:"/docs/components/writing-consumers"}},a={},d=[{value:"Custom Docker Images",id:"custom-docker-images",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"custom-docker-images",children:"Custom Docker Images"}),"\n",(0,t.jsxs)(n.p,{children:["All ",(0,t.jsx)(n.code,{children:".go"})," components get built using a default Docker image. If you want to use your own image, for example, because your component has custom dependencies, you can do that too."]}),"\n",(0,t.jsxs)(n.p,{children:["One good example of such a component is the ",(0,t.jsx)(n.a,{href:"https://github.com/ocurity/dracon/tree/main/components/producers/ossf-scorecard",children:"producers/ossf-scorecard component"}),". Let's take a closer look at it."]}),"\n",(0,t.jsxs)(n.p,{children:["In the below ",(0,t.jsx)(n.code,{children:"Dockerfile"})," we using a custom base image and then are further configuring that."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title="dracon/components/producers/ossf-scorecard/Dockerfile"',children:'ARG OSSF_SCORECARD_SAFETY_BASE_IMAGE\nFROM gcr.io/openssf/scorecard:stable\n\nFROM ${OSSF_SCORECARD_SAFETY_BASE_IMAGE}\n\nCOPY --from=0 /scorecard /scorecard\n\nENTRYPOINT ["/scorecard"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In addition, a ",(0,t.jsx)(n.code,{children:"Makefile"})," is placed inside the component folder, to advice Smithy on how to build the component image."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="dracon/components/producers/ossf-scorecard/Makefile"',children:'.PHONY: component publish\n\nCONTAINER_REPO=\nDRACON_VERSION=\nOSSF_SCORECARD_SAFETY_BASE_IMAGE=$(shell test -e .custom_image && cat .custom_image || echo "alpine:latest")\n\nDOCKER=docker\n\ncomponent:\n\t$(DOCKER) build --tag $(CONTAINER_REPO)/components/producers/ossf-scorecard:$(DRACON_VERSION) \\\n\t\t\t\t\t--file Dockerfile \\\n\t\t\t\t\t$$([ "${SOURCE_CODE_REPO}" != "" ] && echo "--label=org.opencontainers.image.source=${SOURCE_CODE_REPO}" ) \\\n\t\t\t\t\t--build-arg OSSF_SCORECARD_SAFETY_BASE_IMAGE=$(OSSF_SCORECARD_SAFETY_BASE_IMAGE) ../../.. 1>&2\n\npublish:\n\t$(DOCKER) push $(CONTAINER_REPO)/components/producers/ossf-scorecard:$(DRACON_VERSION) 1>&2\n'})}),"\n",(0,t.jsx)(n.p,{children:"And that's it! Simply by adding these two files Smithy will now be able to build your component."})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var t=o(6540);const s={},c=t.createContext(s);function r(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);