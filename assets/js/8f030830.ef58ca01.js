"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[423],{1792:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var t=o(4848),s=o(8453);const a={title:"Development",description:"Going Beyond the Basics",sidebar_position:2},i=void 0,r={id:"development",title:"Development",description:"Going Beyond the Basics",source:"@site/docs/development.md",sourceDirName:".",slug:"/development",permalink:"/docs/development",draft:!1,unlisted:!1,editUrl:"https://github.com/ocurity/docs/tree/main/packages/create-docusaurus/templates/shared/docs/development.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Development",description:"Going Beyond the Basics",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/docs/quickstart"},next:{title:"Creating a Pipeline",permalink:"/docs/writing-pipelines"}},c={},l=[{value:"Deploy Dracon Components",id:"deploy-dracon-components",level:3},{value:"Deploying a custom version of Dracon components",id:"deploying-a-custom-version-of-dracon-components",level:3},{value:"Using a different base image for your images",id:"using-a-different-base-image-for-your-images",level:4},{value:"Deploying your custom Dracon components Helm package",id:"deploying-your-custom-dracon-components-helm-package",level:4}];function d(e){const n={blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"deploy-dracon-components",children:"Deploy Dracon Components"}),"\n",(0,t.jsx)(n.p,{children:"The components that are used to build our pipelines are comprised out of two\npieces:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"a wrapper around the binary of the tool that we wish to execute packaged\ninto a container."}),"\n",(0,t.jsx)(n.li,{children:"a Tekton Task file that describes how to execute the component."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"We provide Helm packages with all our components that can be easily installed\nas follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm upgrade \\\n  --install \\\n  --namespace dracon \\\n  --version 0.8.0 \\\n  dracon-oss-components \\\n  oci://ghcr.io/ocurity/dracon/charts/dracon-oss-components\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deploying-a-custom-version-of-dracon-components",children:"Deploying a custom version of Dracon components"}),"\n",(0,t.jsxs)(n.p,{children:["The first step is to build all the containers and push them to a registry\nthat your cluster has access to. We use ",(0,t.jsx)(n.code,{children:"make"})," to package our containers. For\neach component our Make will automatically generate a phony target with the\npath ",(0,t.jsx)(n.code,{children:"components/{component type}/{component name}/docker"}),". We have a top-level\ntarget that creates all the component containers along with a couple of extra\ncontainers our system uses, such as draconctl."]}),"\n",(0,t.jsx)(n.p,{children:"The following examples are using the local container registry used by the KiND\ncluster, but make sure that you replace the URL with the registry URL that you\nare using, if you are using something else:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make publish-component-containers CONTAINER_REPO=localhost:5000/ocurity/dracon\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["[!NOTE]\nNotice that the repo we are using is slightly different than the\none we pushed the images in the previous step. That's because with local\nregistries the registry is exposed on a port in localhost, however inside the\nKiND cluster, that's not the case. Instead the registry's host is\n",(0,t.jsx)(n.code,{children:"kind-registry:5000"}),". This is also going to be important later when we will\ndeploy the pipelines and their image repositories will also have to be set to\nthis value."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["[!TIP]\nMake sure to use the ",(0,t.jsx)(n.code,{children:"draconctl"})," image that you pushed in the repository"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"using-a-different-base-image-for-your-images",children:"Using a different base image for your images"}),"\n",(0,t.jsxs)(n.p,{children:["If you need your images to have a different base image then you can pass the\n",(0,t.jsx)(n.code,{children:"BASE_IMAGE"})," variable to the ",(0,t.jsx)(n.code,{children:"components"})," or ",(0,t.jsx)(n.code,{children:"publish-component-containers"})," to\nchange it to whatever you need. The targets build the binaries and place them in\nthe ",(0,t.jsx)(n.code,{children:"bin"})," directory and then other targets package them into containers with\n",(0,t.jsx)(n.code,{children:"scratch"})," as the base image."]}),"\n",(0,t.jsxs)(n.p,{children:["There are some components that require extra components or special treatment and\nthese components have their own Makefiles. In those cases you can place a\n",(0,t.jsx)(n.code,{children:".custom_image"})," file in the directory with the base image you wish to use and\nthat will be picked up by the Makefile and build the container."]}),"\n",(0,t.jsx)(n.h4,{id:"deploying-your-custom-dracon-components-helm-package",children:"Deploying your custom Dracon components Helm package"}),"\n",(0,t.jsx)(n.p,{children:"You can package your components into a Helm package by running the following\ncommand:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export CUSTOM_DRACON_VERSION=$(make print-DRACON_VERSION)\nexport CUSTOM_HELM_COMPONENT_PACKAGE_NAME=\nmake cmd/draconctl/bin\nbin/cmd/draconctl components package \\\n  --version ${CUSTOM_DRACON_VERSION} \\\n  --chart-version ${CUSTOM_DRACON_VERSION} \\\n  --name ${CUSTOM_HELM_COMPONENT_PACKAGE_NAME} \\\n  ./components\nhelm upgrade ${CUSTOM_HELM_COMPONENT_PACKAGE_NAME} ./${CUSTOM_HELM_COMPONENT_PACKAGE_NAME}-${CUSTOM_DRACON_VERSION}.tgz \\\n  --install \\\n  --namespace dracon\n"})}),"\n",(0,t.jsx)(n.p,{children:"If your custom components are local, you need to override the component registry\nyou can do so with the following slightly modified helm command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm upgrade ${CUSTOM_HELM_COMPONENT_PACKAGE_NAME} ./${CUSTOM_HELM_COMPONENT_PACKAGE_NAME}-${CUSTOM_DRACON_VERSION}.tgz \\\n  --install \\\n  --namespace dracon\\\n  --set container_registry=kind-registry:5000/ocurity/dracon\n"})}),"\n",(0,t.jsx)(n.p,{children:"After changes to your components you need to redeploy, you can do so as such:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export CUSTOM_DRACON_VERSION=$(make print-DRACON_VERSION)\nmake publish-component-containers CONTAINER_REPO=localhost:5000/ocurity/dracon\nbin/cmd/draconctl components package   --version ${CUSTOM_DRACON_VERSION}   \\\n  --chart-version ${CUSTOM_DRACON_VERSION}   \\\n  --name ${CUSTOM_HELM_COMPONENT_PACKAGE_NAME}   \\\n  ./components\nhelm upgrade ${CUSTOM_HELM_COMPONENT_PACKAGE_NAME} \\\n  ./${CUSTOM_HELM_COMPONENT_PACKAGE_NAME}-${CUSTOM_DRACON_VERSION}.tgz   \\\n  --install \\\n  --namespace dracon \\\n  --set container_registry=kind-registry:5000/ocurity/dracon\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var t=o(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);